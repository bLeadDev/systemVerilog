
//=======================================================
//  This code is generated by Terasic System Builder
//=======================================================

module toplevel_c5g_hex4_uart(

	//////////// CLOCK //////////
	input 	logic	          		CLOCK_125_p,
	input 	logic	          		CLOCK_50_B5B,
	input 	logic	          		CLOCK_50_B6A,
	input 	logic	          		CLOCK_50_B7A,
	input 	logic	          		CLOCK_50_B8A,

	//////////// LED //////////
	output	logic	     [7:0]		LEDG,
	output	logic	     [9:0]		LEDR,

	//////////// KEY //////////
	input 	logic	          		CPU_RESET_n,
	input 	logic	     [3:0]		KEY,

	//////////// SW //////////
	input 	logic	     [9:0]		SW,

	//////////// SEG7 //////////
	output	logic	     [6:0]		HEX0,
	output	logic	     [6:0]		HEX1,
	output	logic	     [6:0]		HEX2,
	output	logic	     [6:0]		HEX3,

	//////////// Uart to USB //////////
	input 	logic	          		UART_RX,
	output	logic	          		UART_TX
);



//=======================================================
//  REG/WIRE declarations
//=======================================================


logic                   rst_n;  //active low
logic                   clk;    //posedge active
logic [7:0]             cnt;     //counting output

logic                   fall0;
logic                   fall1;


//=======================================================
//  Structural coding
//=======================================================

assign rst_n 		= CPU_RESET_n;
assign clk			= CLOCK_50_B5B;
assign key0 		= KEY[0];
assign key1 		= KEY[1];

//define unused outputs
assign HEX2 = '1;
assign HEX3 = '1;
assign LEDG = '0;
assign LEDR = '0;
assign UART_TX = '0;

edge_det edge_det_u0(
	.rst_n      (rst_n),
	.clk        (clk),
	.button     (key0),
	.fall       (fall0),
	.rise       ()      //n.c.
);

edge_det edge_det_u1(
	.rst_n      (rst_n),
	.clk        (clk),
	.button     (key1),
	.fall       (fall1),
	.rise       ()      //n.c.
);

updncnt  updncnt_u0 (
	.rst_n      (rst_n),
	.clk        (clk),
	.inc        (fall0),
	.dec        (fall1),
	.cnt        (cnt)
	);

sevenseg sevenseg_u0(
	.bin_i		(cnt[3:0]),
	.hex_o		(),
	.hexn_o		(HEX0)
);

sevenseg sevenseg_u1(
	.bin_i		(cnt[7:4]),
	.hex_o		(),
	.hexn_o		(HEX1)
);

endmodule
